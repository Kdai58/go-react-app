[{"/usr/src/app/frontend/src/index.tsx":"1","/usr/src/app/frontend/src/reportWebVitals.ts":"2","/usr/src/app/frontend/src/App.tsx":"3","/usr/src/app/frontend/src/components/Details.tsx":"4","/usr/src/app/frontend/src/components/TodoList.tsx":"5","/usr/src/app/frontend/src/components/AddTodo.tsx":"6","/usr/src/app/frontend/src/components/Header.tsx":"7"},{"size":500,"mtime":1609408962000,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1609408962000,"results":"10","hashOfConfig":"9"},{"size":908,"mtime":1609695017000,"results":"11","hashOfConfig":"9"},{"size":947,"mtime":1609597176000,"results":"12","hashOfConfig":"9"},{"size":1324,"mtime":1609694688000,"results":"13","hashOfConfig":"9"},{"size":2530,"mtime":1613722584000,"results":"14","hashOfConfig":"9"},{"size":751,"mtime":1609689100000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"inv9e9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/usr/src/app/frontend/src/index.tsx",[],["35","36"],"/usr/src/app/frontend/src/reportWebVitals.ts",[],"/usr/src/app/frontend/src/App.tsx",["37","38","39","40","41","42","43","44"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport axios, { AxiosResponse } from 'axios';\n\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport AddTodo from './components/AddTodo';\n\n// import Tasks from './components/Tasks';\n// import Details from './components/Details';\n\nexport interface TasksProps { }\n\nconst App: React.FC<TasksProps> = props => {\n\n  return (\n\n      // <BrowserRouter>\n      //     <main className=\"container\">\n      //       <Switch>\n      //           <Route exact path=\"/\" component={Tasks}></Route>\n      //           <Route exact path=\"/:id\" component={Details}></Route>\n      //       </Switch>\n      //     </main>\n      // </BrowserRouter>\n\n    <div>\n      <Header />\n      <TodoList />\n      <AddTodo />\n    </div>\n  );\n}\n\nexport default App;\n\ninterface Props { }\n","/usr/src/app/frontend/src/components/Details.tsx",["45"],"/usr/src/app/frontend/src/components/TodoList.tsx",["46"],"import React, { useState, useEffect } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport { ListGroup, Card, Container, Button, Accordion } from 'react-bootstrap';\nimport ITask from '../type';\n\nexport interface TodoListProps { }\n\nconst TodoList: React.FC<TodoListProps> = props => {\n  const [tasks, setTasks] = useState<ITask[]>([]);\n\n  const getTasks =  () => {\n    const fetch = async () => {\n      const response: AxiosResponse<ITask[]> = await axios.get(process.env.REACT_APP_API_ENDPOINT + 'todo');\n      setTasks(response.data);\n    }\n    fetch();\n  }\n\n  useEffect(getTasks, []);\n\n\n  return (\n    <>\n      <Container>\n        <Accordion defaultActiveKey=\"0\">\n          <Card>\n            <Card.Header as=\"h5\">Todo</Card.Header>\n          </Card>\n          {tasks.map(task => (\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey={`${task.ID}`} >\n                  {task.Title}\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey={`${task.ID}`}>\n                <Card.Body style={{ whiteSpace: \"pre-line\" }}>{task.Text}</Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          ))}\n        </Accordion>\n      </Container>\n    </>\n  );\n}\n\nexport default TodoList;\n",["47","48"],"/usr/src/app/frontend/src/components/AddTodo.tsx",["49","50","51","52"],"import React, { useState, useEffect } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport { Navbar, Form, FormControl, Button, Modal, Container } from 'react-bootstrap';\nimport ITask from '../type';\n\ninterface AddTodoProps { }\n\nconst AddTodo: React.FC<AddTodoProps> = props => {\n\n  const [title, setTitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [show, setShow] = useState(false);\n\n  const addTodo = () => {\n    const Post = async (data: {Title: string, Text: string}) => {\n      const response: AxiosResponse<ITask[]> = await axios.post(process.env.REACT_APP_API_ENDPOINT + \"todo\", data)\n      console.log('hogehogehoge')\n    }\n    const data = {\n      Title: title,\n      Text: text\n    }\n    Post(data);\n  }\n\n  const handleShow = () => { setShow(true); }\n\n\n  const handleClose = () => { setShow(false); }\n\n  const handleChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value)\n  }\n\n  const handleChangeText = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value)\n  }\n\n  return (\n    // <Navbar className=\"bg-light justify-content-between\">\n    //   <Form inline onSubmit={addTodo}>\n    //     <FormControl type=\"text\" placeholder=\"新しいタスク\" className=\" mr-sm-2\" value={input} onChange={(e: React.ChangeEvent<HTMLInputElement>) => {setInput(e.target.value)}} />\n    //     <Button type=\"submit\">追加</Button>\n    //   </Form>\n    // </Navbar>\n\n    <>\n      <Container>\n        <Button variant=\"primary\" onClick={handleShow}>追加</Button>\n      </Container>\n\n      <Modal show={show} onHide={handleClose} size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title>タスクを追加する</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={addTodo}>\n            <Form.Group>\n              <Form.Label>タイトル</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"買い物に行く\" className=\" mr-sm-2\" value={title} onChange={handleChangeTitle} />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>内容</Form.Label>\n              <Form.Control as=\"textarea\" size=\"lg\" value={text} onChange={handleChangeText} />\n            </Form.Group>\n            <Button type=\"submit\">追加</Button>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddTodo;\n","/usr/src/app/frontend/src/components/Header.tsx",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"61","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"62","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":23},{"ruleId":"57","severity":1,"message":"63","line":2,"column":25,"nodeType":"59","messageId":"60","endLine":2,"endColumn":31},{"ruleId":"57","severity":1,"message":"64","line":2,"column":33,"nodeType":"59","messageId":"60","endLine":2,"endColumn":38},{"ruleId":"57","severity":1,"message":"65","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":13},{"ruleId":"57","severity":1,"message":"66","line":3,"column":17,"nodeType":"59","messageId":"60","endLine":3,"endColumn":30},{"ruleId":"57","severity":1,"message":"67","line":37,"column":11,"nodeType":"59","messageId":"60","endLine":37,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":23,"column":55,"nodeType":"70","messageId":"71","endLine":23,"endColumn":67},{"ruleId":"57","severity":1,"message":"72","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":19},{"ruleId":"53","replacedBy":"73"},{"ruleId":"55","replacedBy":"74"},{"ruleId":"57","severity":1,"message":"61","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"75","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":16},{"ruleId":"57","severity":1,"message":"76","line":3,"column":24,"nodeType":"59","messageId":"60","endLine":3,"endColumn":35},{"ruleId":"57","severity":1,"message":"77","line":16,"column":13,"nodeType":"59","messageId":"60","endLine":16,"endColumn":45},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'BrowserRouter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'axios' is defined but never used.","'AxiosResponse' is defined but never used.","'Props' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'ListGroup' is defined but never used.",["78"],["79"],"'Navbar' is defined but never used.","'FormControl' is defined but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]